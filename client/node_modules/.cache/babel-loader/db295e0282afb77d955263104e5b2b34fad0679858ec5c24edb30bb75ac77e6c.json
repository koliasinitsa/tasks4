{"ast":null,"code":"var _jsxFileName = \"D:\\\\task4\\\\client\\\\src\\\\components\\\\UsersTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersTable() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  useEffect(() => {\n    const unsubscribe = firestore.collection('users').onSnapshot(snapshot => {\n      const fetchedUsers = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(fetchedUsers);\n    });\n    const checkCurrentUserStatus = async () => {\n      const currentUser = await auth.currentUser;\n      if (!currentUser) return;\n      const userDoc = await firestore.collection('users').doc(currentUser.uid).get();\n      const userData = userDoc.data();\n      if (userData.status === 'blocked' || userData.status === 'deleted') {\n        auth.signOut();\n        // Перенаправление на страницу входа или другую нужную страницу\n      }\n    };\n    checkCurrentUserStatus();\n    return () => unsubscribe();\n  }, []);\n  const handleSelectUser = userId => {\n    setSelectedUsers(prevSelected => {\n      if (prevSelected.includes(userId)) {\n        return prevSelected.filter(id => id !== userId);\n      } else {\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleBlockUsers = async () => {\n    for (const userId of selectedUsers) {\n      await firestore.collection('users').doc(userId).update({\n        status: 'blocked'\n      });\n\n      // Проверка, блокирует ли текущий пользователь самого себя\n      if (userId === auth.currentUser.uid) {\n        auth.signOut();\n        // Перенаправление на страницу входа или другую нужную страницу\n      }\n    }\n    setSelectedUsers([]);\n  };\n  const handleUnblockUsers = async () => {\n    for (const userId of selectedUsers) {\n      await firestore.collection('users').doc(userId).update({\n        status: 'active'\n      });\n    }\n    setSelectedUsers([]);\n  };\n  const handleDeleteUsers = async () => {\n    for (const userId of selectedUsers) {\n      await firestore.collection('users').doc(userId).delete();\n    }\n    setSelectedUsers([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleSelectUser(user.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.registrationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.lastLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBlockUsers,\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnblockUsers,\n        children: \"Unblock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteUsers,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersTable, \"dHH7vTRpQ6g4/piF7gyHV44i9uQ=\");\n_c = UsersTable;\nexport default UsersTable;\nvar _c;\n$RefreshReg$(_c, \"UsersTable\");","map":{"version":3,"names":["React","useState","useEffect","firestore","auth","jsxDEV","_jsxDEV","UsersTable","_s","users","setUsers","selectedUsers","setSelectedUsers","unsubscribe","collection","onSnapshot","snapshot","fetchedUsers","docs","map","doc","id","data","checkCurrentUserStatus","currentUser","userDoc","uid","get","userData","status","signOut","handleSelectUser","userId","prevSelected","includes","filter","handleBlockUsers","update","handleUnblockUsers","handleDeleteUsers","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","user","onChange","name","email","registrationDate","lastLogin","onClick","_c","$RefreshReg$"],"sources":["D:/task4/client/src/components/UsersTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { firestore } from '../firebase';\r\nimport { auth } from '../firebase';\r\n\r\nfunction UsersTable() {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firestore.collection('users').onSnapshot(snapshot => {\r\n            const fetchedUsers = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n            setUsers(fetchedUsers);\r\n        });\r\n\r\n        const checkCurrentUserStatus = async () => {\r\n            const currentUser = await auth.currentUser;\r\n            if (!currentUser) return;\r\n\r\n            const userDoc = await firestore.collection('users').doc(currentUser.uid).get();\r\n            const userData = userDoc.data();\r\n\r\n            if (userData.status === 'blocked' || userData.status === 'deleted') {\r\n                auth.signOut();\r\n                // Перенаправление на страницу входа или другую нужную страницу\r\n            }\r\n        };\r\n\r\n        checkCurrentUserStatus();\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const handleSelectUser = (userId) => {\r\n        setSelectedUsers(prevSelected => {\r\n            if (prevSelected.includes(userId)) {\r\n                return prevSelected.filter(id => id !== userId);\r\n            } else {\r\n                return [...prevSelected, userId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleBlockUsers = async () => {\r\n        for (const userId of selectedUsers) {\r\n            await firestore.collection('users').doc(userId).update({ status: 'blocked' });\r\n\r\n            // Проверка, блокирует ли текущий пользователь самого себя\r\n            if (userId === auth.currentUser.uid) {\r\n                auth.signOut();\r\n                // Перенаправление на страницу входа или другую нужную страницу\r\n            }\r\n        }\r\n        setSelectedUsers([]);\r\n    };\r\n\r\n    const handleUnblockUsers = async () => {\r\n        for (const userId of selectedUsers) {\r\n            await firestore.collection('users').doc(userId).update({ status: 'active' });\r\n        }\r\n        setSelectedUsers([]);\r\n    };\r\n\r\n    const handleDeleteUsers = async () => {\r\n        for (const userId of selectedUsers) {\r\n            await firestore.collection('users').doc(userId).delete();\r\n        }\r\n        setSelectedUsers([]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Users Table</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th><input type=\"checkbox\" /></th>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Registration Date</th>\r\n                        <th>Last Login</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user.id}>\r\n                            <td><input type=\"checkbox\" onChange={() => handleSelectUser(user.id)} /></td>\r\n                            <td>{user.id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.registrationDate}</td>\r\n                            <td>{user.lastLogin}</td>\r\n                            <td>{user.status}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button onClick={handleBlockUsers}>Block</button>\r\n                <button onClick={handleUnblockUsers}>Unblock</button>\r\n                <button onClick={handleDeleteUsers}>Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}