{"ast":null,"code":"var _jsxFileName = \"D:\\\\task4\\\\client\\\\src\\\\components\\\\UsersTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersTable() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  useEffect(() => {\n    const unsubscribe = firestore.collection('users').onSnapshot(snapshot => {\n      const fetchedUsers = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(fetchedUsers);\n    });\n    const checkCurrentUserStatus = async () => {\n      const currentUser = await auth.currentUser;\n      if (!currentUser) return;\n      const userDoc = await firestore.collection('users').doc(currentUser.uid).get();\n      const userData = userDoc.data();\n      if (userData.status === 'blocked' || userData.status === 'deleted') {\n        auth.signOut();\n        // Перенаправление на страницу входа или другую нужную страницу\n      }\n    };\n    checkCurrentUserStatus();\n    return () => unsubscribe();\n  }, []);\n  const handleSelectUser = userId => {\n    setSelectedUsers(prevSelected => {\n      if (prevSelected.includes(userId)) {\n        return prevSelected.filter(id => id !== userId);\n      } else {\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleBlockUsers = async () => {\n    for (const userId of selectedUsers) {\n      await firestore.collection('users').doc(userId).update({\n        status: 'blocked'\n      });\n\n      // Проверка, блокирует ли текущий пользователь самого себя\n      if (userId === auth.currentUser.uid) {\n        auth.signOut();\n        // Перенаправление на страницу входа или другую нужную страницу\n      }\n    }\n    setSelectedUsers([]);\n  };\n  const handleUnblockUsers = async () => {\n    for (const userId of selectedUsers) {\n      await firestore.collection('users').doc(userId).update({\n        status: 'active'\n      });\n    }\n    setSelectedUsers([]);\n  };\n  const handleDeleteUsers = async () => {\n    for (const userId of selectedUsers) {\n      await firestore.collection('users').doc(userId).delete();\n    }\n    setSelectedUsers([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleSelectUser(user.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.registrationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.lastLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBlockUsers,\n        children: \"Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnblockUsers,\n        children: \"Unblock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteUsers,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersTable, \"dHH7vTRpQ6g4/piF7gyHV44i9uQ=\");\n_c = UsersTable;\nexport default UsersTable;\nvar _c;\n$RefreshReg$(_c, \"UsersTable\");","map":{"version":3,"names":["React","useState","useEffect","firestore","jsxDEV","_jsxDEV","UsersTable","_s","users","setUsers","selectedUsers","setSelectedUsers","unsubscribe","collection","onSnapshot","snapshot","fetchedUsers","docs","map","doc","id","data","checkCurrentUserStatus","currentUser","auth","userDoc","uid","get","userData","status","signOut","handleSelectUser","userId","prevSelected","includes","filter","handleBlockUsers","update","handleUnblockUsers","handleDeleteUsers","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","user","onChange","name","email","registrationDate","lastLogin","onClick","_c","$RefreshReg$"],"sources":["D:/task4/client/src/components/UsersTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firestore } from '../firebase';\r\n\r\nfunction UsersTable() {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firestore.collection('users').onSnapshot(snapshot => {\r\n          const fetchedUsers = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n          setUsers(fetchedUsers);\r\n        });\r\n      \r\n        const checkCurrentUserStatus = async () => {\r\n          const currentUser = await auth.currentUser;\r\n          if (!currentUser) return;\r\n      \r\n          const userDoc = await firestore.collection('users').doc(currentUser.uid).get();\r\n          const userData = userDoc.data();\r\n      \r\n          if (userData.status === 'blocked' || userData.status === 'deleted') {\r\n            auth.signOut();\r\n            // Перенаправление на страницу входа или другую нужную страницу\r\n          }\r\n        };\r\n      \r\n        checkCurrentUserStatus();\r\n      \r\n        return () => unsubscribe();\r\n      }, []);\r\n\r\n    const handleSelectUser = (userId) => {\r\n        setSelectedUsers(prevSelected => {\r\n            if (prevSelected.includes(userId)) {\r\n                return prevSelected.filter(id => id !== userId);\r\n            } else {\r\n                return [...prevSelected, userId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleBlockUsers = async () => {\r\n        for (const userId of selectedUsers) {\r\n            await firestore.collection('users').doc(userId).update({ status: 'blocked' });\r\n\r\n            // Проверка, блокирует ли текущий пользователь самого себя\r\n            if (userId === auth.currentUser.uid) {\r\n                auth.signOut();\r\n                // Перенаправление на страницу входа или другую нужную страницу\r\n            }\r\n        }\r\n        setSelectedUsers([]);\r\n    };\r\n\r\n    const handleUnblockUsers = async () => {\r\n        for (const userId of selectedUsers) {\r\n            await firestore.collection('users').doc(userId).update({ status: 'active' });\r\n        }\r\n        setSelectedUsers([]);\r\n    };\r\n\r\n    const handleDeleteUsers = async () => {\r\n        for (const userId of selectedUsers) {\r\n            await firestore.collection('users').doc(userId).delete();\r\n        }\r\n        setSelectedUsers([]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Users Table</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th><input type=\"checkbox\" /></th>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Registration Date</th>\r\n                        <th>Last Login</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user.id}>\r\n                            <td><input type=\"checkbox\" onChange={() => handleSelectUser(user.id)} /></td>\r\n                            <td>{user.id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.registrationDate}</td>\r\n                            <td>{user.lastLogin}</td>\r\n                            <td>{user.status}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button onClick={handleBlockUsers}>Block</button>\r\n                <button onClick={handleUnblockUsers}>Unblock</button>\r\n                <button onClick={handleDeleteUsers}>Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}